service: get-products-list-API

frameworkVersion: '3'

useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: ${env:REGION}
  environment:
    REGION:  ${env:REGION}
    PRODUCTS_TABLE: ${env:PRODUCTS_TABLE}
    STOCK_TABLE: ${env:STOCK_TABLE}
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "SNS:*"
    Resource: "*"
  - Effect: "Allow"
    Action:
      - "SQS:*"
    Resource: "*"

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
        ReceiveMessageWaitTimeSeconds: 20
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: catalogBatchProcess-SNS
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: avdeevvictor95@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
  Outputs:
    CatalogItemsQueueUrl:
        Value:
          Ref: SQSQueue
        Export:
          Name: catalogItemsQueueUrl
    CatalogItemsQueueArn:
        Value: !GetAtt SQSQueue.Arn
        Export:
          Name: catalogItemsQueueArn

functions:
  catalogBatchProcess:
    handler: catalogBatchProcess/catalogBatchProcess.catalogBatchProcess
    role: ${env:IMPORT_PRODUCT_LAMBDA_ROLE}
    events:
      - sqs:
          batchSize: 5
          arn:
              Fn::GetAtt:
                  - SQSQueue
                  - Arn
  getProductsList:
    handler: getProductsList/getProductsList.getProductsList
    role: ${env:DB_ACCESS_ROLE}
    events:
      - http:
          path: products
          method: get
          cors: true

  getProductsById:
    handler: getProductsById/getProductsById.getProductsById
    role: ${env:DB_ACCESS_ROLE}
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true

  createProduct:
    handler: createProduct/createProduct.createProduct
    role: ${env:DB_ACCESS_ROLE}
    events:
      - http:
          path: products
          method: post
          cors: true

